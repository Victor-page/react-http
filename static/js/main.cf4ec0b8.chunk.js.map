{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","trim","onAddMovie","control","htmlFor","type","ref","rows","App","useState","setMovies","isLoading","setIsloading","error","setError","url","fetchMovieHandler","useCallback","a","fetch","response","ok","Error","status","json","data","loadedMovies","Object","hasOwnProperty","call","push","console","log","message","useEffect","addMovieHandler","method","body","JSON","stringify","headers","content","length","MoviesList","Fragment","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf4ec0b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__1RHr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__bmd6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__2xaLU\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useRef } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value.trim(),\n      openingText: openingTextRef.current.value.trim(),\n      releaseDate: releaseDateRef.current.value.trim(),\n    };\n\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"opening-text\">Opening Text</label>\n        <textarea rows=\"5\" id=\"opening-text\" ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"date\">Release Date</label>\n        <input type=\"text\" id=\"date\" ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const url =\n    'https://react-http-7aca5-default-rtdb.firebaseio.com/movies.json';\n\n  const fetchMovieHandler = useCallback(async () => {\n    setIsloading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Sth went wrong! ${response.status}`);\n      }\n      const data = await response.json();\n\n      const loadedMovies = [];\n\n      for (const id in data) {\n        if (Object.hasOwnProperty.call(data, id)) {\n          const { title, openingText, releaseDate } = data[id];\n\n          loadedMovies.push({ id, title, openingText, releaseDate });\n        }\n      }\n\n      setMovies(loadedMovies);\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    } finally {\n      setIsloading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler]);\n\n  const addMovieHandler = async (movie) => {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: { 'Content-Type': 'application/json' },\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}